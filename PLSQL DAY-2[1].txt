                                     PL/SQL
                                    =========


1.Write a PL/SQL program to calculate the experience of the given employee
  based on passed employee number ?

Enter value for empno: 7902
experience is:43years
ANS:

SQL> DECLARE
  2      V_HIREDATE DATE;
  3      EXP NUMBER(10);
  4      V_EMPNO NUMBER(4);
  5  BEGIN
  6      V_EMPNO := &V_EMPNO;
  7      SELECT HIREDATE INTO V_HIREDATE FROM EMP WHERE EMPNO = V_EMPNO;
  8      EXP := TRUNC((SYSDATE - V_HIREDATE) / 365);
  9      DBMS_OUTPUT.PUT_LINE('Experience is: ' || EXP || ' years');
 10  END;
 11  /
Enter value for v_empno: 7900
old   6:     V_EMPNO := &V_EMPNO;
new   6:     V_EMPNO := 7900;
Experience is: 43 years
--------------------------------------------------------------------------

2.Write a PL/SQL program eligible for voting system based on age

if age is>=18 then display a message : You are eligible for voting.

if age is<18 then display a message  : You are not eligible for voting.
                                       Better luck next time.
ANS:
DECLARE AGE NUMBER(2);
  2  BEGIN
  3  AGE:=&ENTER_AGE;
  4  IF AGE>=18 THEN
  5  DBMS_OUTPUT.PUT_LINE('YOU ARE ELIGBLE FOR VOTE');
  6  ELSE
  7  DBMS_OUTPUT.PUT_LINE('YOU ARE NOT ELIGBLE FOR VOTE');
  8  END IF;
  9  END;
 10  /
Enter value for enter_age: 23
old   3: AGE:=&ENTER_AGE;
new   3: AGE:=23;
YOU ARE ELIGBLE FOR VOTE

--------------------------------------------------------------------------

3.Write a PL/SQL program that accepts a student ID, fetches the marks from 
  a student111 table, display the grade based on the following conditions

if Marks >= 90 then display a message ---> Grade A

if Marks >= 80 then display a message ---> Grade B

if Marks >= 70 then display a message ---> Grade C

if Marks >= 35 then display a message ---> Grade D

Marks < 35 --->then display a message ---> FAIL

ANS:
DECLARE
    V_MARKS NUMBER(10);
BEGIN
SELECT MARKS INTO V_MARKS FROM STUDENT111
WHERE SID=&SID;
IF MARKS>90 THEN
DBMS_OUTPUT.PUT_LINE('A GRADE');
ELSIF MARKS>=80 THEN 
DBMS_OUTPUT.PUT_LINE('B GRADE');
ELSIF MARKS>=70 THEN
DBMS_OUTPUT.PUT_LINE('C GRADE');
ELSIF MARKS>=35 THEN
DBMS_OUTPUT.PUT_LINE('D GRADE');
ELSE 
DBMS_OUTPUT.PUT_LINE('FAIL');
END IF;
END;
/


CREATE TABLE STUDENT111
(
SID NUMBER(10),
SNAME VARCHAR2(10),
MARKS NUMBER(10)
);

INSERT INTO STUDENT111 VALUES(1,'SURYA',88);
INSERT INTO STUDENT111 VALUES(2,'KAVYA',74);
INSERT INTO STUDENT111 VALUES(3,'ANUSHKA',92);
INSERT INTO STUDENT111 VALUES(4,'PREETHI',12);
INSERT INTO STUDENT111 VALUES(5,'NITHISH',30);

 

SQL>select * from student111;

      SID      	NAME	  MARKS
     -----    --------   -------
      1	       SURYA	   88
      2	       KAVYA	   74
      3	       ANUSHKA 	   92
      4	       PREETHI	   12
      5	       NITHISH	   30


--------------------------------------------------------------------------



4.Write a PL/SQL program to print 1..10 numbers by using
   for loop

NOTE:-in for loops index variable internally behaves like integer variable.
====  that's why when we are using for loops not required to declare index
      variable explicitly.

ANS:
SQL> BEGIN
  2  FOR I IN 1..10
  3  LOOP
  4  DBMS_OUTPUT.PUT_LINE(I);
  5  END LOOP;
  6  END;
  7  /
--------------------------------------------------------------------------

5.Write a PL/SQL program to print 10..1 numbers reverse by
   using for loop ?

ANS:

SQL> BEGIN
  2  FOR I IN REVERSE 1..10
  3  LOOP
  4  DBMS_OUTPUT.PUT_LINE(I);
  5  END LOOP;
  6  END;
  7  /
--------------------------------------------------------------------------
6.Write a PL/SQL program to print 2025 calendar?

01-JAN-25
02-JAN-25
.........
.........
31-DEC-25
ANS:

SQL> DECLARE
  2  D1 DATE:='01-JAN-2025';
  3  D2 DATE:='31-DEC-2025';
  4  BEGIN
  5  WHILE(D1<=D2)
  6  LOOP
  7  DBMS_OUTPUT.PUT_LINE(D1);
  8  D1:=D1+1;
  9  END LOOP;
 10  END;
 11  /
ANS2:

  1  DECLARE
  2  D1 DATE:='01-JAN-2025';
  3  D2 DATE:='31-DEC-2025';
  4  BEGIN
  5  WHILE(D1<=D2)
  6  LOOP
  7  DBMS_OUTPUT.PUT_LINE(D1||','||TO_CHAR(D1,'DAY'));
  8  D1:=D1+1;
  9  END LOOP;
 10* END;
SQL> /


